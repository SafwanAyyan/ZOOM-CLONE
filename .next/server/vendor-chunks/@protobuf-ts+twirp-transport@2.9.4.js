"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@protobuf-ts+twirp-transport@2.9.4";
exports.ids = ["vendor-chunks/@protobuf-ts+twirp-transport@2.9.4"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-format.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-format.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTwirpRequestHeader: () => (/* binding */ createTwirpRequestHeader),\n/* harmony export */   parseMetadataFromResponseHeaders: () => (/* binding */ parseMetadataFromResponseHeaders),\n/* harmony export */   parseTwirpErrorResponse: () => (/* binding */ parseTwirpErrorResponse)\n/* harmony export */ });\n/* harmony import */ var _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @protobuf-ts/runtime */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime@2.9.4/node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js\");\n/* harmony import */ var _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @protobuf-ts/runtime-rpc */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime-rpc@2.9.4/node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js\");\n/* harmony import */ var _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./twitch-twirp-error-code */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js\");\n\n\n\n/**\n * Create fetch API headers for a Twirp request.\n */\nfunction createTwirpRequestHeader(headers, sendJson, meta) {\n    // add meta as headers\n    if (meta) {\n        for (let [k, v] of Object.entries(meta)) {\n            if (typeof v == \"string\")\n                headers.append(k, v);\n            else\n                for (let i of v)\n                    headers.append(k, i);\n        }\n    }\n    // set standard headers (possibly overwriting meta)\n    headers.set('Content-Type', sendJson ? \"application/json\" : \"application/protobuf\");\n    headers.set('Accept', sendJson ? \"application/json\" : \"application/protobuf, application/json\");\n    return headers;\n}\n/**\n * Parse Twirp error message from JSON and create RpcError from the Twirp error.\n *\n * see https://twitchtv.github.io/twirp/docs/spec_v5.html\n */\nfunction parseTwirpErrorResponse(json) {\n    if (!(0,_protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_0__.isJsonObject)(json) || typeof json.code !== \"string\" || typeof json.msg !== \"string\")\n        return new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.RpcError('cannot read twirp error response', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_2__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_2__.TwirpErrorCode.internal]);\n    let meta = {};\n    if ((0,_protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_0__.isJsonObject)(json.meta)) {\n        for (let [k, v] of Object.entries(json.meta)) {\n            if (typeof v == \"string\")\n                meta[k] = v;\n        }\n    }\n    return new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.RpcError(json.msg, json.code, meta);\n}\n/**\n * Parses fetch API response headers to RpcMetaData.\n * Drops the headers Content-Type and Content-Length.\n */\nfunction parseMetadataFromResponseHeaders(headers) {\n    let meta = {};\n    headers.forEach((value, key) => {\n        if (key.toLowerCase() === 'content-type')\n            return;\n        if (key.toLowerCase() === 'content-length')\n            return;\n        if (meta.hasOwnProperty(key))\n            meta[key].push(value);\n        else\n            meta[key] = value;\n    });\n    return meta;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHByb3RvYnVmLXRzK3R3aXJwLXRyYW5zcG9ydEAyLjkuNC9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3R3aXJwLXRyYW5zcG9ydC9idWlsZC9lczIwMTUvdHdpcnAtZm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRDtBQUNBO0FBQ087QUFDM0Q7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLGtFQUFZO0FBQ3JCLG1CQUFtQiw4REFBUSxxQ0FBcUMsb0VBQWMsQ0FBQyxvRUFBYztBQUM3RjtBQUNBLFFBQVEsa0VBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3lvb20vLi9ub2RlX21vZHVsZXMvLnBucG0vQHByb3RvYnVmLXRzK3R3aXJwLXRyYW5zcG9ydEAyLjkuNC9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3R3aXJwLXRyYW5zcG9ydC9idWlsZC9lczIwMTUvdHdpcnAtZm9ybWF0LmpzPzUwMGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNKc29uT2JqZWN0IH0gZnJvbSBcIkBwcm90b2J1Zi10cy9ydW50aW1lXCI7XG5pbXBvcnQgeyBScGNFcnJvciB9IGZyb20gXCJAcHJvdG9idWYtdHMvcnVudGltZS1ycGNcIjtcbmltcG9ydCB7IFR3aXJwRXJyb3JDb2RlIH0gZnJvbSBcIi4vdHdpdGNoLXR3aXJwLWVycm9yLWNvZGVcIjtcbi8qKlxuICogQ3JlYXRlIGZldGNoIEFQSSBoZWFkZXJzIGZvciBhIFR3aXJwIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUd2lycFJlcXVlc3RIZWFkZXIoaGVhZGVycywgc2VuZEpzb24sIG1ldGEpIHtcbiAgICAvLyBhZGQgbWV0YSBhcyBoZWFkZXJzXG4gICAgaWYgKG1ldGEpIHtcbiAgICAgICAgZm9yIChsZXQgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKG1ldGEpKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHYgPT0gXCJzdHJpbmdcIilcbiAgICAgICAgICAgICAgICBoZWFkZXJzLmFwcGVuZChrLCB2KTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpIG9mIHYpXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKGssIGkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIHNldCBzdGFuZGFyZCBoZWFkZXJzIChwb3NzaWJseSBvdmVyd3JpdGluZyBtZXRhKVxuICAgIGhlYWRlcnMuc2V0KCdDb250ZW50LVR5cGUnLCBzZW5kSnNvbiA/IFwiYXBwbGljYXRpb24vanNvblwiIDogXCJhcHBsaWNhdGlvbi9wcm90b2J1ZlwiKTtcbiAgICBoZWFkZXJzLnNldCgnQWNjZXB0Jywgc2VuZEpzb24gPyBcImFwcGxpY2F0aW9uL2pzb25cIiA6IFwiYXBwbGljYXRpb24vcHJvdG9idWYsIGFwcGxpY2F0aW9uL2pzb25cIik7XG4gICAgcmV0dXJuIGhlYWRlcnM7XG59XG4vKipcbiAqIFBhcnNlIFR3aXJwIGVycm9yIG1lc3NhZ2UgZnJvbSBKU09OIGFuZCBjcmVhdGUgUnBjRXJyb3IgZnJvbSB0aGUgVHdpcnAgZXJyb3IuXG4gKlxuICogc2VlIGh0dHBzOi8vdHdpdGNodHYuZ2l0aHViLmlvL3R3aXJwL2RvY3Mvc3BlY192NS5odG1sXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVR3aXJwRXJyb3JSZXNwb25zZShqc29uKSB7XG4gICAgaWYgKCFpc0pzb25PYmplY3QoanNvbikgfHwgdHlwZW9mIGpzb24uY29kZSAhPT0gXCJzdHJpbmdcIiB8fCB0eXBlb2YganNvbi5tc2cgIT09IFwic3RyaW5nXCIpXG4gICAgICAgIHJldHVybiBuZXcgUnBjRXJyb3IoJ2Nhbm5vdCByZWFkIHR3aXJwIGVycm9yIHJlc3BvbnNlJywgVHdpcnBFcnJvckNvZGVbVHdpcnBFcnJvckNvZGUuaW50ZXJuYWxdKTtcbiAgICBsZXQgbWV0YSA9IHt9O1xuICAgIGlmIChpc0pzb25PYmplY3QoanNvbi5tZXRhKSkge1xuICAgICAgICBmb3IgKGxldCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXMoanNvbi5tZXRhKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2ID09IFwic3RyaW5nXCIpXG4gICAgICAgICAgICAgICAgbWV0YVtrXSA9IHY7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBScGNFcnJvcihqc29uLm1zZywganNvbi5jb2RlLCBtZXRhKTtcbn1cbi8qKlxuICogUGFyc2VzIGZldGNoIEFQSSByZXNwb25zZSBoZWFkZXJzIHRvIFJwY01ldGFEYXRhLlxuICogRHJvcHMgdGhlIGhlYWRlcnMgQ29udGVudC1UeXBlIGFuZCBDb250ZW50LUxlbmd0aC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTWV0YWRhdGFGcm9tUmVzcG9uc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBsZXQgbWV0YSA9IHt9O1xuICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LWxlbmd0aCcpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChtZXRhLmhhc093blByb3BlcnR5KGtleSkpXG4gICAgICAgICAgICBtZXRhW2tleV0ucHVzaCh2YWx1ZSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIG1ldGFba2V5XSA9IHZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBtZXRhO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-transport.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-transport.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpFetchTransport: () => (/* binding */ TwirpFetchTransport)\n/* harmony export */ });\n/* harmony import */ var _twirp_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./twirp-format */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-format.js\");\n/* harmony import */ var _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @protobuf-ts/runtime-rpc */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime-rpc@2.9.4/node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js\");\n/* harmony import */ var _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @protobuf-ts/runtime-rpc */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime-rpc@2.9.4/node_modules/@protobuf-ts/runtime-rpc/build/es2015/deferred.js\");\n/* harmony import */ var _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @protobuf-ts/runtime-rpc */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime-rpc@2.9.4/node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js\");\n/* harmony import */ var _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @protobuf-ts/runtime-rpc */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime-rpc@2.9.4/node_modules/@protobuf-ts/runtime-rpc/build/es2015/unary-call.js\");\n/* harmony import */ var _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @protobuf-ts/runtime */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+runtime@2.9.4/node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js\");\n/* harmony import */ var _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./twitch-twirp-error-code */ \"(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js\");\n\n\n\n\n/**\n * Implements the Twirp protocol, supporting JSON or binary format on\n * the wire. Uses the fetch API to do the HTTP requests.\n *\n * See https://twitchtv.github.io/twirp/docs/spec_v5.html\n */\nclass TwirpFetchTransport {\n    constructor(options) {\n        this.defaultOptions = options;\n    }\n    mergeOptions(options) {\n        return (0,_protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_0__.mergeRpcOptions)(this.defaultOptions, options);\n    }\n    unary(method, input, options) {\n        var _a, _b, _c;\n        let opt = options, url = this.makeUrl(method, opt), fetchInit = (_a = opt.fetchInit) !== null && _a !== void 0 ? _a : {}, requestBody = opt.sendJson ? method.I.toJsonString(input, opt.jsonOptions) : method.I.toBinary(input, opt.binaryOptions), defHeader = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.Deferred(), defMessage = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.Deferred(), defStatus = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.Deferred(), defTrailer = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: (0,_twirp_format__WEBPACK_IMPORTED_MODULE_2__.createTwirpRequestHeader)(new globalThis.Headers(), !!opt.sendJson, opt.meta), body: requestBody, signal: (_b = options.abort) !== null && _b !== void 0 ? _b : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            defHeader.resolve((0,_twirp_format__WEBPACK_IMPORTED_MODULE_2__.parseMetadataFromResponseHeaders)(fetchResponse.headers));\n            // Cloudflare Workers throw when the type property of a fetch response\n            // is accessed, so wrap access with try/catch. See:\n            // * https://developers.cloudflare.com/workers/runtime-apis/response/#properties\n            // * https://github.com/cloudflare/miniflare/blob/72f046e/packages/core/src/standards/http.ts#L646\n            let responseType;\n            try {\n                responseType = fetchResponse.type;\n            }\n            catch (_a) { }\n            switch (responseType) {\n                case \"error\":\n                case \"opaque\":\n                case \"opaqueredirect\":\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/Response/type\n                    throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError(`fetch response type ${fetchResponse.type}`, _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.unknown]);\n            }\n            if (!fetchResponse.ok) {\n                return fetchResponse.json().then(value => {\n                    throw (0,_twirp_format__WEBPACK_IMPORTED_MODULE_2__.parseTwirpErrorResponse)(value);\n                }, () => {\n                    throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('received HTTP ' + fetchResponse.status + ', unable to read response body as json', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.internal]);\n                });\n            }\n            if (opt.sendJson) {\n                return fetchResponse.json().then(value => method.O.fromJson(value, opt.jsonOptions), () => {\n                    throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('unable to read response body as json', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.dataloss]);\n                });\n            }\n            return fetchResponse.arrayBuffer().then(value => method.O.fromBinary(new Uint8Array(value), opt.binaryOptions), () => {\n                throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('unable to read response body', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.dataloss]);\n            });\n        }, (reason) => {\n            // failed to fetch, aborted, wrong url or network problem\n            if (reason instanceof Error && reason.name === 'AbortError')\n                throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError(reason.message, _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.cancelled]);\n            throw new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError(reason instanceof Error ? reason.message : reason);\n        })\n            .then(message => {\n            defMessage.resolve(message);\n            defStatus.resolve({ code: 'OK', detail: '' });\n            defTrailer.resolve({});\n        })\n            .catch((reason) => {\n            // RpcErrors are thrown by us, everything else is an internal error\n            let error = reason instanceof _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError ? reason\n                : new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError(reason instanceof Error ? reason.message : reason, _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.internal]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            defMessage.rejectPending(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_5__.UnaryCall(method, (_c = opt.meta) !== null && _c !== void 0 ? _c : {}, input, defHeader.promise, defMessage.promise, defStatus.promise, defTrailer.promise);\n    }\n    /**\n     * Create an URI for a RPC call.\n     *\n     * Takes the `baseUrl` option and appends:\n     * - slash \"/\"\n     * - package name\n     * - dot \".\"\n     * - service name\n     * - slash \"/\"\n     * - method name\n     *\n     * If the service was declared without a package, the package name and dot\n     * are omitted.\n     *\n     * The method name is CamelCased just as it would be in Go, unless the\n     * option `useProtoMethodName` is `true`.\n     */\n    makeUrl(method, options) {\n        let base = options.baseUrl;\n        if (base.endsWith('/'))\n            base = base.substring(0, base.length - 1);\n        let methodName = method.name;\n        if (options.useProtoMethodName !== true) {\n            methodName = (0,_protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.lowerCamelCase)(methodName);\n            methodName = methodName.substring(0, 1).toUpperCase() + methodName.substring(1);\n        }\n        return `${base}/${method.service.typeName}/${methodName}`;\n    }\n    clientStreaming(method /*, options: RpcOptions*/) {\n        const e = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('Client streaming is not supported by Twirp', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    duplex(method /*, options: RpcOptions*/) {\n        const e = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('Duplex streaming is not supported by Twirp', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    serverStreaming(method /*, input: I, options?: RpcOptions*/) {\n        const e = new _protobuf_ts_runtime_rpc__WEBPACK_IMPORTED_MODULE_3__.RpcError('Server streaming is not supported by Twirp', _twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode[_twitch_twirp_error_code__WEBPACK_IMPORTED_MODULE_4__.TwirpErrorCode.unimplemented]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twirp-transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpErrorCode: () => (/* binding */ TwirpErrorCode)\n/* harmony export */ });\n// Copyright 2018 Twitch Interactive, Inc.  All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n// use this file except in compliance with the License. A copy of the License is\n// located at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n// CONDITIONS OF ANY KIND, either express or implied. See the License\n// for the specific language governing permissions and limitations under\n// the License.\n/**\n * See https://twitchtv.github.io/twirp/docs/spec_v5.html#error-codes\n *\n * Names and descriptions from [twirp / errors.go](https://github.com/twitchtv/twirp/blob/b2ecb97cf02a9bb55d730920f6a1cb5243899093/errors.go)\n *\n * Copyright 2018 by Twitch Interactive, Inc.\n */\nvar TwirpErrorCode;\n(function (TwirpErrorCode) {\n    /**\n     * The operation was cancelled.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"cancelled\"] = 0] = \"cancelled\";\n    /**\n     * An unknown error occurred. For example, this can be used when handling\n     * errors raised by APIs that do not return any error information.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unknown\"] = 1] = \"unknown\";\n    /**\n     * The client specified an invalid argument. This indicates arguments that\n     * are invalid regardless of the state of the system (i.e. a malformed\n     * file name, required argument, number out of range, etc.).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"invalid_argument\"] = 2] = \"invalid_argument\";\n    /**\n     * The client sent a message which could not be decoded. This may mean that\n     * the message was encoded improperly or that the client and server have\n     * incompatible message definitions.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"malformed\"] = 3] = \"malformed\";\n    /**\n     * Operation expired before completion. For operations that change the state\n     * of the system, this error may be returned even if the operation has\n     * completed successfully (timeout).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"deadline_exceeded\"] = 4] = \"deadline_exceeded\";\n    /**\n     * Some requested entity was not found.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"not_found\"] = 5] = \"not_found\";\n    /**\n     * The requested URL path wasn't routable to a Twirp service and method.\n     * This is returned by generated server code and should not be returned\n     * by application code (use \"not_found\" or \"unimplemented\" instead).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"bad_route\"] = 6] = \"bad_route\";\n    /**\n     * An attempt to create an entity failed because one already exists.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"already_exists\"] = 7] = \"already_exists\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * It must not be used if the caller cannot be identified (use\n     * \"unauthenticated\" instead).\n     */\n    TwirpErrorCode[TwirpErrorCode[\"permission_denied\"] = 8] = \"permission_denied\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unauthenticated\"] = 9] = \"unauthenticated\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or\n     * perhaps the entire file system is out of space.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"resource_exhausted\"] = 10] = \"resource_exhausted\";\n    /**\n     * The operation was rejected because the system is not in a state\n     * required for the operation's execution. For example, doing an rmdir\n     * operation on a directory that is non-empty, or on a non-directory\n     * object, or when having conflicting read-modify-write on the same\n     * resource.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"failed_precondition\"] = 11] = \"failed_precondition\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue\n     * like sequencer check failures, transaction aborts, etc.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"aborted\"] = 12] = \"aborted\";\n    /**\n     * The operation was attempted past the valid range. For example, seeking\n     * or reading past end of a paginated collection. Unlike\n     * \"invalid_argument\", this error indicates a problem that may be fixed if\n     * the system state changes (i.e. adding more items to the collection).\n     * There is a fair bit of overlap between \"failed_precondition\" and\n     * \"out_of_range\". We recommend using \"out_of_range\" (the more specific\n     * error) when it applies so that callers who are iterating through a space\n     * can easily look for an \"out_of_range\" error to detect when they are done.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"out_of_range\"] = 13] = \"out_of_range\";\n    /**\n     * The operation is not implemented or not supported/enabled in this service.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unimplemented\"] = 14] = \"unimplemented\";\n    /**\n     * When some invariants expected by the underlying system have been broken.\n     * In other words, something bad happened in the library or backend service.\n     * Twirp specific issues like wire and serialization problems are also\n     * reported as \"internal\" errors.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"internal\"] = 15] = \"internal\";\n    /**\n     * The service is currently unavailable. This is most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"unavailable\"] = 16] = \"unavailable\";\n    /**\n     * The operation resulted in unrecoverable data loss or corruption.\n     */\n    TwirpErrorCode[TwirpErrorCode[\"dataloss\"] = 17] = \"dataloss\";\n})(TwirpErrorCode || (TwirpErrorCode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@protobuf-ts+twirp-transport@2.9.4/node_modules/@protobuf-ts/twirp-transport/build/es2015/twitch-twirp-error-code.js\n");

/***/ })

};
;